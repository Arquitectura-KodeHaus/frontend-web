name: ci-frontend-subdir

on:
  push:
    branches: [ "develop", "prod" ]
  pull_request:
    branches: [ "prod" ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  PROJECT_ID: kodehaus-principal-473704
  REGION: us-central1
  ARTIFACT_REPO: apps
  IMAGE_NAME: frontend-web
  SERVICE_NAME: frontend-web
  NODE_VERSION: '18'
  APP_DIR: plazapp            # 游녣 aqu칤 est치 tu package.json

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.APP_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            ${{ env.APP_DIR }}/package-lock.json
            ${{ env.APP_DIR }}/yarn.lock
            ${{ env.APP_DIR }}/pnpm-lock.yaml

      - name: Mostrar 치rbol (debug)
        run: |
          pwd
          ls -la

      - name: Install deps (lockfile-aware)
        shell: bash
        run: |
          if [ -f pnpm-lock.yaml ]; then
            npm i -g pnpm
            pnpm install --frozen-lockfile
          elif [ -f yarn.lock ]; then
            npm i -g yarn
            yarn install --frozen-lockfile || yarn install
          elif [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build
        run: npm run build

      # ====== Autenticaci칩n GCP (WIF/OIDC) ======
      - name: Auth (WIF/OIDC)
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
          # -- Alternativa con key JSON (si la usas a칰n):
          # credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      # ====== Construcci칩n y push de la imagen ======
      # Dockerfile est치 en la RA칈Z del repo; por eso el context/file salen de la ra칤z.
      - name: Build & Push image (Dockerfile en ra칤z)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:cache
          cache-to: type=registry,ref=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:cache,mode=max

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          region: ${{ env.REGION }}
          flags: --allow-unauthenticated
        env:
          CLOUDSDK_CORE_PROJECT: ${{ env.PROJECT_ID }}

      - name: Output URL
        run: echo "Deployed URL => ${{ steps.deploy.outputs.url || '' }}"
